@page "/company/create"
@using Domain.Services.Intefaces.Adress.Interfaces
@using Domain.Services.Intefaces.Company
@using Infraestructure.Services.Authentication
@inject IAdressLocatorServices _adressLocatorServices
@inject NavigationManager _navigationManager
@inject IJSRuntime _jsRuntime
@inject ICompanyServices _companyServices
@inject TokenAuthenticationProvider _authenticationStateProvider

<div class="container-fluid d-flex justify-content-center align-items-center" style="height: 90vh;">
    <div class="mx-auto">
        <div class="card shadow-sm">
            <div class="card-header" style="border:none;">
                Cadastro de empresas
            </div>
            <div class="card-body">
                <section class="mb-3"><strong>Dados cadastrais</strong></section>
                <div class="row">
                    <div class="col-md-12">
                        <div class="mb-3">
                            <label for="name" class="form-label">Razão social</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-building"></i></span>
                                <input type="text" class="form-control @_cssInputName" id="name" placeholder="Razão social" @bind="_companyViewModel.Name" @bind:event="oninput" @onchange="ValidateInputName">
                                <div class="@(_isValidInputName ? "valid-feedback" : "invalid-feedback")">
                                    @(!_isValidInputName ? "Preencha o campo corretamente" : "")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="coorporateTaxPayerRoot" class="form-label">CNPJ Raiz</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-file-earmark-text"></i></span>
                                <input type="text" class="form-control @_cssInputCoorporateTaxPayerRoot" id="coorporateTaxPayerRoot" placeholder="CNPJ Raiz" @bind="_companyViewModel.CoorporateTaxPayerRoot" @bind:event="oninput" @onchange="ValidateInputCoorporateTaxPayerRoot" maxlength="18">
                                <div class="@(_isValidInputCoorporateTaxPayerRoot ? "valid-feedback" : "invalid-feedback")">
                                    @(!_isValidInputCoorporateTaxPayerRoot ? "Preencha o campo corretamente" : "")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="coorporateTaxPayer" class="form-label">CNPJ</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-file-earmark-text-fill"></i></span>
                                <input type="text" class="form-control @_cssInputCoorporateTaxPayer" id="coorporateTaxPayer" placeholder="CNPJ" @bind="_companyViewModel.CoorporateTaxPayer" @bind:event="oninput" @onchange="ValidateInputCoorporateTaxPayer" maxlength="18">
                                <div class="@(_isValidInputCoorporateTaxPayer ? "valid-feedback" : "invalid-feedback")">
                                    @(!_isValidInputCoorporateTaxPayer ? "Preencha o campo corretamente" : "")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="phone" class="form-label">Telefone</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-telephone"></i></span>
                                <input type="text" class="form-control @_cssInputPhone" id="phone" placeholder="Telefone" @bind="_companyViewModel.Phone" @bind:event="oninput" @onchange="ValidateInputPhone" maxlength="15">
                                <div class="@(_isValidInputPhone ? "valid-feedback" : "invalid-feedback")">
                                    @(!_isValidInputPhone ? "Preencha o campo corretamente" : "")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label for="confirmPhone" class="form-label">Confirmar telefone</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-telephone"></i></span>
                                <input type="text" class="form-control @_cssInputConfirmPhone" id="confirmPhone" placeholder="Confirmar telefone" @bind="_companyViewModel.ConfirmPhone" @bind:event="oninput" @onchange="ValidateInputConfirmPhone" maxlength="15">
                                <div class="@(_isValidInputConfirmPhone ? "valid-feedback" : "invalid-feedback")">
                                    @(!_isValidInputConfirmPhone ? "Preencha o campo corretamente" : "")
                                </div>
                            </div>
                        </div>
                    </div>
                    <section class="mb-3"><strong>Endereço</strong></section>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">CEP</label>
                            <div class="input-group">
                                <i class="bi bi-envelope-open input-group-text"></i>
                                <input @bind="_companyViewModel.ZipCode" @bind:event="oninput" @onchange="ValidateInputZipCode" type="text" class="form-control @_cssInputZipCode" placeholder="CEP" id="zipCodeInput" maxlength="9" disabled="@_isSearchingZipCode" />
                                @if (_isSearchingZipCode)
                                {
                                    <span class="input-group-text">
                                        <div class="spinner-border spinner-border-sm text-primary" role="status">
                                            <span class="visually-hidden">Loading...</span>
                                        </div>
                                    </span>
                                }
                                <div class="@(_isValidInputCep ? "valid-feedback" : "invalid-feedback")">
                                    @(!_isValidInputCep ? "Preencha o campo corretamente" : "")
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Endereço</label>
                            <div class="input-group">
                                <i class="bi bi-house input-group-text"></i>
                                <input @bind="_companyViewModel.Address" @bind:event="oninput" @onchange="ValidateInputAddress" type="text" class="form-control @_cssInputAddress" placeholder="Endereço" />
                                <div class="@(_isValidInputAddress ? "valid-feedback" : "invalid-feedback")">
                                    @(!_isValidInputAddress ? "Preencha o campo corretamente" : "")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="mb-3">
                            <label class="form-label">Cidade</label>
                            <div class="input-group">
                                <i class="bi bi-building input-group-text"></i>
                                <input @bind="_companyViewModel.City" @bind:event="oninput" @onchange="ValidateInputCity" type="text" class="form-control @_cssInputCity" placeholder="Cidade" />
                                <div class="@(_isValidInputCity ? "valid-feedback" : "invalid-feedback")">
                                    @(!_isValidInputCity ? "Preencha o campo corretamente" : "")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="mb-3">
                            <label class="form-label">Número</label>
                            <div class="input-group">
                                <i class="bi bi-hash input-group-text"></i>
                                <input @bind="_companyViewModel.Number" @bind:event="oninput" @onchange="ValidateInputNumber" type="text" class="form-control @_cssInputNumber" placeholder="Número" />
                                <div class="@(_isValidInputNumber ? "valid-feedback" : "invalid-feedback")">
                                    @(!_isValidInputNumber ? "Preencha o campo corretamente" : "")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="mb-3">
                            <label class="form-label">Bairro</label>
                            <div class="input-group">
                                <i class="bi bi-map input-group-text"></i>
                                <input @bind="_companyViewModel.District" @bind:event="oninput" @onchange="ValidateInputDistrict" type="text" class="form-control @_cssInputDistrict" placeholder="Bairro" />
                                <div class="@(_isValidInputNeighborhood ? "valid-feedback" : "invalid-feedback")">
                                    @(!_isValidInputNeighborhood ? "Preencha o campo corretamente" : "")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="mb-3">
                            <label class="form-label">Estado</label>
                            <div class="input-group">
                                <i class="bi bi-geo-alt input-group-text"></i>
                                <select @bind="_companyViewModel.State" @bind:event="oninput" class="form-control @_cssInputState" @onchange="ValidateInputState">
                                    <option value="">Selecione um estado</option>
                                    <option value="AC">Acre</option>
                                    <option value="AL">Alagoas</option>
                                    <option value="AP">Amapá</option>
                                    <option value="AM">Amazonas</option>
                                    <option value="BA">Bahia</option>
                                    <option value="CE">Ceará</option>
                                    <option value="DF">Distrito Federal</option>
                                    <option value="ES">Espírito Santo</option>
                                    <option value="GO">Goiás</option>
                                    <option value="MA">Maranhão</option>
                                    <option value="MT">Mato Grosso</option>
                                    <option value="MS">Mato Grosso do Sul</option>
                                    <option value="MG">Minas Gerais</option>
                                    <option value="PA">Pará</option>
                                    <option value="PB">Paraíba</option>
                                    <option value="PR">Paraná</option>
                                    <option value="PE">Pernambuco</option>
                                    <option value="PI">Piauí</option>
                                    <option value="RJ">Rio de Janeiro</option>
                                    <option value="RN">Rio Grande do Norte</option>
                                    <option value="RS">Rio Grande do Sul</option>
                                    <option value="RO">Rondônia</option>
                                    <option value="RR">Roraima</option>
                                    <option value="SC">Santa Catarina</option>
                                    <option value="SP">São Paulo</option>
                                    <option value="SE">Sergipe</option>
                                    <option value="TO">Tocantins</option>
                                </select>
                                <div class="@(_isValidInputState ? "valid-feedback" : "invalid-feedback")">
                                    @(!_isValidInputState ? "Preencha o campo corretamente" : "")
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="py-3">
                    <button type="button" class="btn btn-secondary shadow-sm" @onclick="ClearFields">
                        <span class="bi bi-eraser-fill me-1"></span> Limpar
                    </button>
                    <button type="button" class="btn btn-primary shadow-sm" @onclick="OnSubmitAsync" disabled="@(_isSpinning)">
                        @if (_isSpinning)
                        {
                            <div class="spinner-grow spinner-grow-sm text-white" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                        }
                        <span class="@(!_isSpinning ? "me-1 bi bi-check-circle" : "")"></span> Cadastrar
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>


@code {

    private string
        _cssInputName = string.Empty,
        _cssInputCoorporateTaxPayerRoot = string.Empty,
        _cssInputCoorporateTaxPayer = string.Empty,
        _cssInputPhone = string.Empty,
        _cssInputConfirmPhone = string.Empty,
        _cssInputZipCode = string.Empty,
        _cssInputAddress = string.Empty,
        _cssInputCity = string.Empty,
        _cssInputNumber = string.Empty,
        _cssInputDistrict = string.Empty,
        _cssInputState = string.Empty;

    private bool
        _isValidInputName = false,
        _isValidInputCoorporateTaxPayerRoot = false,
        _isValidInputCoorporateTaxPayer = false,
        _isValidInputPhone = false,
        _isValidInputConfirmPhone = false,
        _isValidInputCep = false,
        _isValidInputAddress = false,
        _isValidInputCity = false,
        _isValidInputNumber = false,
        _isValidInputNeighborhood = false,
        _isValidInputState = false,
        _isSearchingZipCode = false;

    private void ValidateInputName()
    {
        _isValidInputName = !string.IsNullOrEmpty(_companyViewModel.Name);
        _cssInputName = _isValidInputName ? "is-valid" : "is-invalid";
    }

    private void ValidateInputCoorporateTaxPayerRoot()
    {
        _isValidInputCoorporateTaxPayerRoot = !string.IsNullOrEmpty(_companyViewModel.CoorporateTaxPayerRoot);
        _cssInputCoorporateTaxPayerRoot = _isValidInputCoorporateTaxPayerRoot ? "is-valid" : "is-invalid";
    }

    private void ValidateInputCoorporateTaxPayer()
    {
        _isValidInputCoorporateTaxPayer = !string.IsNullOrEmpty(_companyViewModel.CoorporateTaxPayer);
        _cssInputCoorporateTaxPayer = _isValidInputCoorporateTaxPayer ? "is-valid" : "is-invalid";
    }

    private void ValidateInputPhone()
    {
        _isValidInputPhone = !string.IsNullOrEmpty(_companyViewModel.Phone);
        _cssInputPhone = _isValidInputPhone ? "is-valid" : "is-invalid";
    }

    private void ValidateInputConfirmPhone()
    {
        _isValidInputConfirmPhone = !string.IsNullOrEmpty(_companyViewModel.ConfirmPhone) && _companyViewModel.ConfirmPhone == _companyViewModel.Phone;
        _cssInputConfirmPhone = _isValidInputConfirmPhone ? "is-valid" : "is-invalid";
    }


    private async Task ValidateInputZipCode()
    {
        _isSearchingZipCode = true;
        _isValidInputCep = !string.IsNullOrEmpty(_companyViewModel.ZipCode) && _companyViewModel.ZipCode.Length == 9;
        _cssInputZipCode = _isValidInputCep ? "is-valid" : "is-invalid";

        if (_isValidInputCep)
        {
            await SearchAdressAsync();
        }

        _isSearchingZipCode = false;
    }

    private void ValidateInputAddress()
    {
        _isValidInputAddress = !string.IsNullOrEmpty(_companyViewModel.Address);
        _cssInputAddress = _isValidInputAddress ? "is-valid" : "is-invalid";
    }

    private void ValidateInputCity()
    {
        _isValidInputCity = !string.IsNullOrEmpty(_companyViewModel.City);
        _cssInputCity = _isValidInputCity ? "is-valid" : "is-invalid";
    }

    private void ValidateInputNumber()
    {
        _isValidInputNumber = !string.IsNullOrEmpty(_companyViewModel.Number);
        _cssInputNumber = _isValidInputNumber ? "is-valid" : "is-invalid";
    }

    private void ValidateInputDistrict()
    {
        _isValidInputNeighborhood = !string.IsNullOrEmpty(_companyViewModel.District);
        _cssInputDistrict = _isValidInputNeighborhood ? "is-valid" : "is-invalid";
    }

    private void ValidateInputState()
    {
        _isValidInputState = !string.IsNullOrEmpty(_companyViewModel.State);
        _cssInputState = _isValidInputState ? "is-valid" : "is-invalid";
    }

    private void ClearFields()
    {
        _companyViewModel.Name = string.Empty;
        _companyViewModel.CoorporateTaxPayerRoot = string.Empty;
        _companyViewModel.CoorporateTaxPayer = string.Empty;
        _companyViewModel.Phone = string.Empty;
        _companyViewModel.ConfirmPhone = string.Empty;
        _companyViewModel.ZipCode = string.Empty;
        _companyViewModel.Address = string.Empty;
        _companyViewModel.City = string.Empty;
        _companyViewModel.Number = string.Empty;
        _companyViewModel.District = string.Empty;
        _companyViewModel.State = string.Empty;

        // Reset validation states
        _cssInputName = string.Empty;
        _cssInputCoorporateTaxPayerRoot = string.Empty;
        _cssInputCoorporateTaxPayer = string.Empty;
        _cssInputPhone = string.Empty;
        _cssInputConfirmPhone = string.Empty;
        _cssInputZipCode = string.Empty;
        _cssInputAddress = string.Empty;
        _cssInputCity = string.Empty;
        _cssInputNumber = string.Empty;
        _cssInputDistrict = string.Empty;
        _cssInputState = string.Empty;

        _isValidInputName = false;
        _isValidInputCoorporateTaxPayerRoot = false;
        _isValidInputCoorporateTaxPayer = false;
        _isValidInputPhone = false;
        _isValidInputConfirmPhone = false;
        _isValidInputCep = false;
        _isValidInputAddress = false;
        _isValidInputCity = false;
        _isValidInputNumber = false;
        _isValidInputNeighborhood = false;
        _isValidInputState = false;
    }
}
